#first we need to install quandl to get financial data
!pip install quandl
import quandl
#Authentication of the quandl api key
quandl.ApiConfig.api_key = "rGYZAo_PxaWwJ3k43ntd"


def get_dates():
    # get user input for timeframe, it shoould be a string in format "YYYY-MM-DD"
    # example input: start = "2010-05-01" end = "2010-07-20"
    start  = input("Please enter your desired start date in the format: YYYY-MM-DD")
    end = input("Please enter your desired end date in the format: YYYY-MM-DD")
    return start, end


# function for getting the tickers
def get_ticker():
   
    # get userinput for amount of stocks they want
    number_of_stocks = int(input(" Please enter the amount of stocks you want to consider for your portfolio"))
    
# create an empty list for the tickeres and then let the user enter the tickers, QUANDL only works with US-tickers
        
tickers = ()

    for i in range(0,n):
        tickers.append(input("Please Enter the Ticker/Symbol of stock number %i you are considering for your portfolio" % (i+1)))
    
    return n,tickers
    
data = quandl.get_table('WIKI/PRICES',  qopts = { 'columns': ['ticker', 'date', 'close'] }, 
                                        ticker = [tickers], 
                                        date = { 'gte': '2018-01-01', 'lte': '2019-01-01' })

data.head()
#this generates a table with the dates and the adjusted closing of this day

#for a better visualisation we can show a plot of the adjusted closing price of the ticker
# Define the figure size for the plot
plt.figure(figsize=(10, 7))
# Plot the adjusted close price
data['Adj. Close'].plot()
# Define the label for the title of the figure
plt.title("Adjusted Close Price of %s" % ticker, fontsize=16)
# Define the labels for x-axis and y-axis
plt.ylabel('Price', fontsize=14)
plt.xlabel('Year', fontsize=14)
# Plot the grid lines
plt.grid(which="major", color='k', linestyle='-.', linewidth=0.5)
plt.show()

#After downloading the stock prices during the timespan, we want to know the daily returns
ticker_daily_returns = ticker['Adj Close'].pct_change()

#head of daily returns listed
print(ticker_daily_returns.head())

#cumulative returns for the stock with 1$ investment (anpassen)
netflix_cum_returns = (netflix_daily_returns + 1).cumprod()

                  
